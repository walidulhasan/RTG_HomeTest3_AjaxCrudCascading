@model IEnumerable<AjaxCrudCascading.Models.Person>
@{
    ViewData["Title"] = "Index";

}
@section Styles{
    <link rel="stylesheet" href="//cdn.datatables.net/1.11.3/css/jquery.dataTables.min.css" />


}
<div class="row">

    <div class="col-sm-12 col-md-12">
        <div class="card card-dark">
            <div class="card-header m-0 p-1 bg-dark">
                <h5 class="card-title m-0 text-white text-center">Address Book</h5>

            </div>
            <form asp-action="Create" class="my-2 mx-2" method="post">
                <input hidden  id="Id" />
                <div class="row form-group">
                    <div class="col-md-6">
                        <label class="control-label">Name</label>
                        <input id="name" name="name" type="text" class="form-control">
                        <span class="text-danger"></span>

                    </div>
                    <div class="col-md-6">
                        <label class="control-label">Email</label>
                        <input id="email" name="email" type="text" class="form-control">
                        <span class="text-danger"></span>

                    </div>

                </div>
                <div class="form-row">
                    <div class="form-group col-md-6">
                        <label class="control-label">Country</label>
                        <select id="Country" name="Country" asp-items="ViewBag.Countries" class="form-control">
                            <option value="-1">--Country--</option>

                        </select>
                    </div>
                    <div class="form-group col-md-6">
                        <label class="control-label" style="margin-left:10px">City</label>

                        <select id="City" name="City" class="form-control">
                        </select>
                    </div>

                </div>
                <div class="row">
                    <div class="col-12 col-md-12 text-center">
                        <div class="form-group">
                            <button type="button" id="Save" onclick="addPerson()" class="btn btn-sm btn-success"><i class="fas fa-plus-circle"></i> Create</button>
                            <div class="d-flex justify-content-end">
                                <button type="reset" class="btn btn-sm btn-danger"><i class="fas fa-trash-restore"></i> Reset</button>
                            </div>
                            
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <div class="col-sm-12 col-md-12">
        <div class="card card-dark">
            
            <table class="table" id="listProducts">
                <thead class="thead-dark">
                    <tr>
                        <th scope="col" id="btnDelete">SL#</th>
                        <th scope="col">Name</th>
                        <th scope="col">Email</th>

                        <th scope="col">Country</th>
                        <th scope="col">City</th>
                        <th scope="col" class="text-center">Action</th>

                    </tr>
                </thead>
                <tbody>
                    @*@foreach (var item in Model)
                        {
                            <tr>
                                <th scope="row">@(sl++)</th>
                                <td>@item.Name</td>
                                <td>@item.Email</td>
                                <td>@item.Countrys.CountryName</td>
                                <td>@item.Citys.DivisionName</td>
                                <td>
                                    <a asp-route-id="@item.Id" class="btn btn-secondary btn-sm text-white font-weight-bold"><i class="fas fa-pen-square fa-lg"></i></a>
                                    <a asp-route-id="@item.Id" asp-action="Delete"  class="btnDelete btn btn-danger btn-sm text-white font-weight-bold"><i class="fas fa-trash"></i></a>
                                </td>
                            </tr>
                        }*@
                </tbody>

            </table>
            <div id="confirmModal" class="modal fade">
                <div class=" modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h3 class="modal-title">
                                <label id="title"></label>
                            </h3>
                            <button type="button" class="close" data-dismiss="modal">&times;</button>
                        </div>
                        <div class="modal-body">
                            <h2 class="alert alert-danger">Do you want to delete this record?</h2>
                        </div>
                        <div class="modal-footer">
                            <button type="button" id="btnOk" class="btn btn-primary">Ok</button>
                            <button type="button" id="btnCancel" class="btn btn-danger" data-dismiss="modal">Cancel</button>
                        </div>
                    </div>
                </div>
            </div>


        </div>
    </div>
</div>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script src="~/lib/sweetalert/sweetalert.min.js"></script>
    <script src="//cdn.datatables.net/1.11.3/js/jquery.dataTables.min.js"></script>
    <script type="text/javascript">

        //For update Check
        var isUpdatable = false;
        //Show Table Data
        $(document).ready(function () {
            getProducts();

        })
        //Get Prson by Id
        function getPrsonById(id) {
            $.ajax({
                url: "Person/Get/" + id,
                type: 'GET',
                dataType: 'json',
                success: function (data) {
                    $("#Id").val(data.Id);
                    $("#name").val(data.Name);
                    $("#email").val(data.Email);
                    $("#Country").val(data.CountryId);
                    $("#City").val(data.CitysId);
                    isUpdatable = true;
                }
            })
        }


        //Add Person or Update Person
        function addPerson() {
            var obj = {
                Name: $('#name').val(),
                Email: $('#email').val()
                , CountryId: $('#Country').val()
                , CitysId:  $('#City').val()
            }
            var data = {
                Id: $('#Id').val(),
                Name: $('#name').val(),
                Email: $('#email').val()
                , CountryId: $('#Country').val()
                , CitysId: $('#City').val()
            }
            if (!isUpdatable) {
               
                $.ajax({
                    type: "POST",
                    url: "/Person/Create",
                    dataType: 'JSON',
                    data: { 'person': obj },
                    success: function (data) {
                        clear();
                        getProducts();

                    }
                })
            } else {
                $.ajax({
                    url: '/Person/Update',
                    type: 'POST',
                    dataType: 'json',
                    data: data,
                    success: function (data) {
                        getProducts();
                        isUpdatable = false;
                        clear();
                    }
                });
            }

        }

        //Show product list
        function getProducts() {
            var sl = 1;
            $.ajax({
                url: "/Person/GetAllPerson/",
                type: "GET",
                dataType: 'json',
                success: function (data) {
                    var rows = '';
                    $.each(data, function (i, item) {
                        rows += "<tr>"
                        rows += "<td>" + sl++ + "</td>"
                        rows += "<td hidden>" + item.Id + "</td>"
                        rows += "<td>" + item.Name + "</td>"
                        rows += "<td>" + item.Email + "</td>"
                        rows += "<td>" + item.CountryId + "</td>"
                        rows += "<td>" + item.CitysId + "</td>"
                        rows += "<td class='text-center'><button type='button' id='btnEdit' class='btn btn-primary btn-sm' onclick='return getPrsonById(" + item.Id + ")'><i class='fas fa-edit fa-sm'></i></button> <button type='button' id='btnDelete' class='btn btn-danger btn-sm' onclick='return deletePersonById(" + item.Id + ")'><i class='fas fa-trash'></i></button></td>"
                        rows += "</tr>";
                        $("#listProducts tbody").html(rows);
                    });
                }
            })
        }

        //Cascading DDL
        $("#Country").change(function () {
            $("#City").empty();
            $.ajax({
                type: 'GET',
                url: '@Url.Action("getCity")',
                dataType: 'json',
                data: { id: $("#Country").val() },
                success: function (divisions) {
                    $("#City").append('<option value="' + -1 + '">' + "Select City" + '</option>');
                    $.each(divisions, function (i, division) {
                        $("#City").append('<option value="' + division.value + '">' + division.text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('faield to retrive Division' + ex)
                }

            });
            return false;
        })

        //Delete Person by Id
        function deletePersonById(id) {
            $("#confirmModal #title").text("Delete Product");
            $("#confirmModal").modal('show');
            $("#confirmModal #btnOk").click(function () {
                debugger
                $.ajax({
                    
                    url: "Person/Delete/" + id,
                    type: "POST",
                    dataType: "JSON",
                    success: function (data) {
                        
                        $("#confirmModal").modal('hide');
                        getProducts();

                    },
                    error: function (err) {
                        alert("Error " + err.responseText);
                    }
                })
                
            });
        }

        //$('#btnDelete').on('click', function (event) {
        //    event.preventDefault();
        //    const url = $(this).attr('href');
        //    const id = this.id;
        //    swal({
        //        title: 'Are you sure?',
        //        text: 'You will not be able to recover this record after deletion!',
        //        icon: 'warning',
        //        buttons: ["Cancel", "Yes!"],
        //    }).then(function (value) {
        //        if (value) {
        //            swal({
        //                title: 'Please wait',
        //                text: 'This item is being deleted!',
        //                icon: 'info',
        //                buttons: false,
        //            });
        //            $.ajax({
        //                url: "Person/Delete/" + id,
        //                type: 'GET',
        //                dataType: 'html'
        //            }).done(function (data) {
        //                setTimeout(function () {
        //                    swal("Deleted!", "The record has been deleted.", "success").then(function () {
        //                        $("#div-" + id + "").remove();
        //                        window.location.reload();
        //                    });
        //                }, 100);
        //            }).fail(function () {
        //                swal("Deleted_Error", "Error while deleting. :(", "error");
        //            });
        //        }
        //    });
        //});
        function clear() {
            $("Id").val("");
            $("#name").val("");
            $("#email").val("");
            $("#Country").val("");
            $("#City").val("");
        }

    </script>
}

